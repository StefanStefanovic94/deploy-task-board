{"version":3,"sources":["components/atom/button/index.jsx","constans/ACTIONS.js","components/organism/allUsers/index.jsx","redux/Issues/issueAction.js","components/atom/editButton/index.jsx","components/organism/task/index.jsx","components/organism/listColumn/index.jsx","redux/Columns/columnAction.js","components/pages/board/index.jsx","components/atom/dropMenu/index.jsx","components/atom/input/index.jsx","components/objects/itemsPriority/index.jsx","components/objects/items/index.jsx","components/pages/create/index.jsx","components/pages/editIssue/index.jsx","components/pages/createColumn/index.jsx","components/pages/createUser/index.jsx","redux/Users/userAction.js","App.js","redux/Issues/issueReducer.js","redux/Users/userReducer.js","redux/Columns/columnReducer.js","redux/reducers.js","redux/store.js","index.js","../node_modules/validatorjs/src/lang sync /^/.*$"],"names":["Button","onClick","value","type","className","AllUsers","users","useSelector","state","allUsers","listColumn","allListColumns","issues","allIssues","idArray","console","log","dispatch","useDispatch","setTask","selectedUserId","ACTIONS","issuesIds","map","user","includes","alt","src","avatarImageUrl","EditButton","Task","assignee","title","description","issueType","priority","index","deletedIssueId","to","ListColumn","columns","delCol","id","deleteColumn","column","name","filter","issue","length","Board","DropMenu","items","onSelect","label","err","htmlFor","onChange","e","selectedValue","find","item","toString","target","disabled","selected","defaultProps","Input","placeholder","itemsPriority","Create","history","useState","undefined","reporter","createState","setState","errorState","setErrorState","changeState","newState","prevState","text","validation","Validator","fails","errors","Valid","goBack","EditIssue","match","params","stateI","editState","setEditState","setIssueState","editIssue","push","CreateColumn","stateColumn","setStateColumn","CreateUser","stateUser","setStateUser","delUser","deleteUser","App","exact","path","component","initialState","createdAt","itemCount","combineReducers","action","newAllIssues","newArr","splice","elem","i","newArray","hasValue","store","createStore","reducers","ReactDOM","render","document","getElementById","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.0494c92c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n\nconst Button = ({ onClick, value }) => {\n  return (\n    <button type=\"submit\" className=\"button\" onClick={onClick}>\n      {value}\n    </button>\n  );\n};\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","export default {\n  // Issue reducer\n  ADD_ISSUE_TO_LIST: 'ADD_ISSUE_TO_LIST',\n  // User reducer\n  ADD_USER_TO_LIST: 'ADD_USER_TO_LIST',\n\n  EDIT_ISSUE: 'EDIT_ISSUE',\n\n  DELETE_ISSUE: 'DELETE_ISSUE',\n\n  ADD_LISTCOLUMN: 'ADD_LISTCOLUMN',\n\n  DELETE_COLUMN: 'DELETE_COLUMN',\n\n  DELETE_USER: 'DELETE_USER',\n\n  TOGGLE_USER_TASK: 'TOGGLE_USER_TASK'\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './allUsers.css';\nimport { addUserTask } from '../../../redux/actions';\n\nconst AllUsers = () => {\n  const users = useSelector((state) => state.users.allUsers);\n  const columns = useSelector((state) => state.listColumn.allListColumns);\n  const issues = useSelector((state) => state.issues.allIssues);\n  // const allId = useSelector((state) => state.users.arrayForId);\n  const issuesId = useSelector((state) => state.issues.idArray);\n  console.log('AllUsers -> users', users);\n\n  const dispatch = useDispatch();\n\n  const setTask = (selectedUserId) => {\n    // console.log('setTask -> selectedUserId', selectedUserId);\n\n    dispatch(addUserTask(selectedUserId));\n  };\n\n  const issuesIds = useSelector((state) => state.issues.idArray);\n\n  return (\n    <div className=\"wrapAvatars\">\n      {users.map((user) => (\n        <img\n          onClick={() => {\n            setTask(user.value);\n          }}\n          className={\n            issuesIds.includes(user.value) ? 'avatarImageSelect' : 'avatarImage'\n          }\n          alt=\"\"\n          src={user.avatarImageUrl}\n        />\n      ))}\n      {/* {console.log('AllUsers -> issues', issuesId)} */}\n    </div>\n  );\n};\n\nexport default AllUsers;\n","import ACTIONS from '../../constans/ACTIONS';\n\nconst addIssueToList = (newIssue) => {\n  return {\n    type: ACTIONS.ADD_ISSUE_TO_LIST,\n    issue: newIssue,\n  };\n};\nconst editIssue = (newIssue) => {\n  return {\n    type: ACTIONS.EDIT_ISSUE,\n    editIssue: newIssue,\n  };\n};\nconst deleteTaskItem = (id) => {\n  return {\n    type: ACTIONS.DELETE_ISSUE,\n    deletedIssueId: id,\n  };\n};\nconst addUserTask = (id) => {\n  return {\n    type: ACTIONS.TOGGLE_USER_TASK,\n    value: id\n  }\n}\n\nexport { addIssueToList, editIssue, deleteTaskItem, addUserTask };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst EditButton = ({ value, onClick }) => {\n  return (\n    <button type=\"submit\" onClick={onClick}>\n      {value}\n    </button>\n  );\n};\n\nEditButton.propTypes = {\n  value: PropTypes.string.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n\nexport default EditButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditButton from '../../atom/editButton';\nimport './task.css';\nimport { deleteTaskItem } from '../../../redux/actions';\n\nconst Task = ({\n  assignee,\n  title,\n  description,\n  issueType,\n  priority,\n  src,\n  index,\n}) => {\n  const dispatch = useDispatch();\n\n  const deleteTask = () => {\n    dispatch(deleteTaskItem(index));\n  };\n\n  return (\n    <div className=\"taskWrap\">\n      <img className=\"imageAvatar\" src={src} alt=\"\" />\n\n      <p className=\"parag\">\n        Assignee:\n        <p className=\"prop\">{assignee}</p>\n      </p>\n      <p className=\"parag\">\n        Title:\n        <p className=\"prop\">{title}</p>\n      </p>\n      <p className=\"parag\">\n        Description:\n        <p className=\"prop\">{description}</p>\n      </p>\n\n      <p className=\"parag\">\n        IssueType:\n        {issueType === 'Bug' ? (\n          <p className=\"propRed\">{issueType}</p>\n        ) : (\n          <p className=\"prop\">{issueType}</p>\n        )}\n      </p>\n\n      <p className=\"parag\">\n        Priority:\n        <p className=\"prop\">{priority}</p>\n      </p>\n      <EditButton value=\"delete\" onClick={deleteTask} />\n\n      <Link to={`/editIssue/${index}`}>\n        <EditButton value=\"edit\" />\n      </Link>\n    </div>\n  );\n};\n\nTask.propTypes = {\n  assignee: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  issueType: PropTypes.string.isRequired,\n  priority: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default Task;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './listColumn.css';\nimport Task from '../task';\n\nimport { deleteColumn } from '../../../redux/Columns/columnAction';\nimport Button from '../../atom/button';\nimport EditButton from '../../atom/editButton';\n\nconst ListColumn = () => {\n  const issues = useSelector((state) => state.issues.allIssues);\n  const columns = useSelector((state) => state.listColumn.allListColumns);\n  const dispatch = useDispatch();\n  const issuesIds = useSelector((state) => state.issues.idArray);\n  console.log('ListColumn -> issuesIds', issuesIds);\n\n  const delCol = (id) => {\n    dispatch(deleteColumn(id));\n  };\n\n  return (\n    <div>\n      <div className=\"listColumn\">\n        {columns.map((column) => {\n          return (\n            <div className=\"list\">\n              <EditButton\n                onClick={() => delCol(column.value)}\n                value=\"delete column\"\n              />\n              <h2>{column.name}</h2>\n\n              {issues\n                .filter((issue) => {\n                  return (\n                    issue.listColumn.value === column.value &&\n                    (issuesIds.length === 0 ||\n                      issuesIds.includes(issue.assignee.value))\n                  );\n                })\n                .map((issue) => (\n                  <Task\n                    assignee={issue.assignee.name}\n                    src={issue.assignee.avatarImageUrl}\n                    title={issue.title}\n                    description={issue.description}\n                    issueType={issue.issueType.name}\n                    priority={issue.priority.name}\n                    index={issue.id}\n                    key=\"\"\n                  />\n                ))}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default ListColumn;\n","import ACTIONS from '../../constans/ACTIONS';\n\nconst addColumn = (newListColumn) => {\n  return {\n    type: ACTIONS.ADD_LISTCOLUMN,\n    listColumn: newListColumn,\n  };\n};\n\nconst deleteColumn = (id) => {\n  return {\n    type: ACTIONS.DELETE_COLUMN,\n    index: id,\n  };\n};\n\nexport { addColumn, deleteColumn };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../../atom/button';\nimport AllUsers from '../../organism/allUsers';\nimport ListColumn from '../../organism/listColumn';\n\nconst Board = () => {\n  return (\n    <div>\n      <div className=\"buttonTask\">\n        <Link to=\"/create_task\">\n          <Button value=\"Create Task\" />\n        </Link>\n        <div>\n          <AllUsers />\n        </div>\n      </div>\n      <ListColumn />\n      <div>\n        <Link to=\"/create_column\">\n          <Button value=\"Create Column\" />\n        </Link>\n\n        <Link to=\"/create_user\">\n          <Button value=\"Create User\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport './dropMenu.css';\nimport PropTypes from 'prop-types';\n\nconst DropMenu = ({ value, items, onSelect, label, err }) => {\n  return (\n    <div className=\"dropMenu\">\n      <label htmlFor=\"a\">{label}</label>\n      <select\n        value={value.value}\n        onChange={(e) => {\n          const selectedValue = items.find(\n            (item) => item.value.toString() === e.target.value.toString()\n          );\n          onSelect(selectedValue);\n        }}\n      >\n        <option disabled selected>\n          -- select an option --\n        </option>\n        {items.map((item) => {\n          return <option value={item.value}>{item.name}</option>;\n        })}\n      </select>\n      <p className=\"error\">{err}</p>\n    </div>\n  );\n};\n\nDropMenu.propTypes = {\n  value: PropTypes.string,\n  items: PropTypes.instanceOf(Array).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  err: PropTypes.string.isRequired,\n};\n\nDropMenu.defaultProps = {\n  value: {},\n};\n\nexport default DropMenu;\n","import React from 'react';\nimport './input.css';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ placeholder, onChange, label, value, err }) => {\n  const func = (e) => {\n    onChange(e.target.value);\n  };\n  return (\n    <div className=\"input\">\n      <label htmlFor=\"a\">{label}</label>\n      <input\n        value={value}\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={func}\n      />\n      <p>{err}</p>\n    </div>\n  );\n};\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  err: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","const itemsPriority = [\n  { name: 'low', value: 'low' },\n  { name: 'medium', value: 'medium' },\n  { name: 'high', value: 'high' },\n];\n\nexport default itemsPriority;\n","const issueType = [\n  { name: 'Bug', value: 'bug' },\n  { name: 'Task', value: 'task' },\n];\n\nexport default issueType;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Validator from 'validatorjs';\nimport DropMenu from '../../atom/dropMenu';\nimport Input from '../../atom/input';\nimport Button from '../../atom/button';\nimport './create.css';\n\nimport itemsPriority from '../../objects/itemsPriority';\nimport issueType from '../../objects/items';\nimport { addIssueToList } from '../../../redux/actions';\n\nconst Create = ({ history }) => {\n  const [createState, setState] = useState({\n    title: '',\n    description: '',\n    issueType: undefined,\n    priority: undefined,\n    assignee: undefined,\n    listColumn: undefined,\n    reporter: undefined,\n  });\n\n  const [errorState, setErrorState] = useState({});\n\n  const dispatch = useDispatch();\n\n  const changeState = (newState) => {\n    setState((prevState) => ({ ...prevState, ...newState }));\n  };\n\n  const columns = useSelector((state) => state.listColumn.allListColumns);\n  const users = useSelector((state) => state.users.allUsers);\n\n  const Valid = () => {\n    const rules = {\n      title: 'required',\n      description: 'required',\n      issueType: 'required',\n      priority: 'required',\n      assignee: 'required',\n      listColumn: 'required',\n      reporter: 'required',\n    };\n    const validation = new Validator(createState, rules);\n    if (validation.fails()) {\n      setErrorState(validation.errors.errors);\n      return false;\n    }\n    setErrorState({});\n    return true;\n  };\n\n  const setIssueValidation = () => {\n    if (Valid()) {\n      dispatch(addIssueToList(createState));\n      history.goBack();\n    }\n  };\n\n  const titleFunc = (text) => {\n    changeState({ title: text });\n  };\n\n  const descriptionFunc = (text) => {\n    changeState({ description: text });\n  };\n\n  const onIssueTypeChange = (issue) => {\n    changeState({ issueType: issue });\n  };\n\n  const onPiorityTypeChange = (priority) => {\n    changeState({ priority });\n  };\n\n  const onAssigneeChange = (assignee) => {\n    changeState({ assignee });\n  };\n\n  const onListColumnChange = (listColumn) => {\n    changeState({ listColumn });\n  };\n\n  const onReporterChange = (reporter) => {\n    changeState({ reporter });\n  };\n\n  return (\n    <div className=\"createPage\">\n      <div className=\"createPageDiv\">\n        <div>\n          <Input\n            placeholder=\"title\"\n            value={createState.title}\n            onChange={titleFunc}\n            label=\"Title: \"\n            err={errorState.title}\n          />\n        </div>\n        <div>\n          <Input\n            placeholder=\"description\"\n            value={createState.description}\n            onChange={descriptionFunc}\n            label=\"Description: \"\n            err={errorState.description}\n          />\n        </div>\n\n        <div>\n          <DropMenu\n            items={issueType}\n            value={createState.issueType}\n            onSelect={onIssueTypeChange}\n            label=\"Issue Type: \"\n            err={errorState.issueType}\n          />\n        </div>\n\n        <div>\n          <DropMenu\n            items={itemsPriority}\n            value={createState.priority}\n            onSelect={onPiorityTypeChange}\n            label=\"Priority: \"\n            err={errorState.priority}\n          />\n        </div>\n\n        <div>\n          <DropMenu\n            items={users}\n            value={createState.assignee}\n            onSelect={onAssigneeChange}\n            label=\"Assignee: \"\n            err={errorState.assignee}\n          />\n        </div>\n        <div>\n          <DropMenu\n            items={columns}\n            value={createState.listColumn}\n            onSelect={onListColumnChange}\n            label=\"ListColumn: \"\n            err={errorState.listColumn}\n          />\n        </div>\n\n        <div>\n          <DropMenu\n            items={users}\n            value={createState.reporter}\n            onSelect={onReporterChange}\n            label=\"Reporter: \"\n            err={errorState.reporter}\n          />\n        </div>\n\n        <div>\n          <Button onClick={setIssueValidation} value=\"submit\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCreate.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Create;\n","import React, { useState } from 'react';\nimport Validator from 'validatorjs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DropMenu from '../../atom/dropMenu';\nimport Input from '../../atom/input';\nimport issueType from '../../objects/items';\nimport itemsPriority from '../../objects/itemsPriority';\nimport Button from '../../atom/button';\n\nimport { editIssue } from '../../../redux/actions';\n\nconst EditIssue = ({ history, match }) => {\n  // const globalState = useContext(UsersContext)\n  // const someState = globalState.issues //ovaj se koristio prvo//\n  const { id } = match.params;\n  const stateI = useSelector((state) => state.issues.allIssues[id]); // ovaj se poziva iz reduxa//\n\n  const columns = useSelector((state) => state.listColumn.allListColumns);\n  const users = useSelector((state) => state.users.allUsers);\n\n  const [editState, setEditState] = useState(stateI);\n\n  const setIssueState = (newState) =>\n    setEditState((prevState) => ({\n      ...prevState,\n      ...newState,\n    }));\n\n  const dispatch = useDispatch();\n\n  const [errorState, setErrorState] = useState({});\n\n  const Valid = () => {\n    const rules = {\n      title: 'required',\n      description: 'required',\n      issueType: 'required',\n      priority: 'required',\n      assignee: 'required',\n      listColumn: 'required',\n      reporter: 'required',\n    };\n    const validation = new Validator(editState, rules);\n\n    if (validation.fails()) {\n      setErrorState(validation.errors.errors);\n      return false;\n    }\n    setErrorState({});\n    return true;\n  };\n\n  const setIssueValidation = () => {\n    const isValid = Valid();\n    if (isValid) {\n      dispatch(editIssue(editState));\n      history.push('/');\n    }\n  };\n\n  const titleFunc = (text) => {\n    setIssueState({ title: text }, id);\n  };\n\n  const descriptionFunc = (text) => {\n    setIssueState({ description: text }, id);\n  };\n\n  const onIssueTypeChange = (issue) => {\n    setIssueState({ issueType: issue }, id);\n  };\n\n  const onPiorityTypeChange = (priority) => {\n    setIssueState({ priority }, id);\n  };\n\n  const onAssigneeChange = (assignee) => {\n    setIssueState({ assignee }, id);\n  };\n\n  const onListColumnChange = (listColumn) => {\n    setIssueState({ listColumn }, id);\n  };\n\n  const onReporterChange = (reporter) => {\n    setIssueState({ reporter }, id);\n  };\n\n  return (\n    <div>\n      <div>\n        <Input\n          placeholder=\"title\"\n          value={editState.title}\n          onChange={titleFunc}\n          label=\"Title: \"\n          err={errorState.title}\n        />\n      </div>\n      <div>\n        <Input\n          placeholder=\"description\"\n          value={editState.description}\n          onChange={descriptionFunc}\n          label=\"Description: \"\n          err={errorState.description}\n        />\n      </div>\n\n      <div>\n        <DropMenu\n          items={issueType}\n          value={editState.issueType}\n          onSelect={onIssueTypeChange}\n          label=\"Issue Type: \"\n          err={errorState.issueType}\n        />\n      </div>\n\n      <div>\n        <DropMenu\n          items={itemsPriority}\n          value={editState.priority}\n          onSelect={onPiorityTypeChange}\n          label=\"Priority: \"\n          err={errorState.priority}\n        />\n      </div>\n\n      <div>\n        <DropMenu\n          items={users}\n          value={editState.assignee}\n          onSelect={onAssigneeChange}\n          label=\"Assignee: \"\n          err={errorState.assignee}\n        />\n      </div>\n      <div>\n        <DropMenu\n          items={columns}\n          value={editState.listColumn}\n          onSelect={onListColumnChange}\n          label=\"ListColumn: \"\n          err={errorState.listColumn}\n        />\n      </div>\n\n      <div>\n        <DropMenu\n          items={users}\n          value={editState.reporter}\n          onSelect={onReporterChange}\n          label=\"Reporter: \"\n          err={errorState.reporter}\n        />\n      </div>\n\n      <div>\n        <Button onClick={setIssueValidation} value=\"submit\" />\n      </div>\n    </div>\n  );\n};\n\nEditIssue.propTypes = {\n  match: PropTypes.instanceOf(Object).isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default EditIssue;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Validator from 'validatorjs';\nimport PropTypes from 'prop-types';\nimport Button from '../../atom/button';\nimport Input from '../../atom/input';\nimport { addColumn } from '../../../redux/actions';\nimport \"./createColumn.css\"\n\nconst CreateColumn = ({ history }) => {\n  const [stateColumn, setStateColumn] = useState({\n    name: '',\n    value: '',\n  });\n\n  const [errorState, setErrorState] = useState({});\n\n  const changeState = (newState) => {\n    setStateColumn((prevState) => ({ ...prevState, ...newState }));\n  };\n\n  const Valid = () => {\n    const rules = {\n      name: 'required',\n    };\n    const validation = new Validator(stateColumn, rules);\n    if (validation.fails()) {\n      setErrorState(validation.errors.errors);\n      return false;\n    }\n    setErrorState({});\n    return true;\n  };\n\n  const dispatch = useDispatch();\n\n  const setColumnValidation = () => {\n    if (Valid()) {\n      dispatch(addColumn(stateColumn));\n      history.goBack();\n    }\n  };\n\n  const nameFunc = (text) => {\n    changeState({ name: text });\n  };\n\n  return (\n    <div className=\"columnWrap\">\n      <Input\n        placeholder=\"create column...\"\n        onChange={nameFunc}\n        value={stateColumn.name}\n        err={errorState.name}\n      />\n      <Button value=\"submit\" onClick={setColumnValidation} />\n    </div>\n  );\n};\n\nCreateColumn.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default CreateColumn;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Validator from 'validatorjs';\nimport PropTypes from 'prop-types';\nimport Input from '../../atom/input';\nimport { addUserToList, deleteUser } from '../../../redux/actions';\nimport Button from '../../atom/button';\n\nimport './createUsers.css';\n\nconst CreateUser = ({ history }) => {\n  const [stateUser, setStateUser] = useState({\n    name: '',\n    avatarImageUrl: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const changeState = (newState) => {\n    setStateUser((prevState) => ({ ...prevState, ...newState }));\n  };\n\n  const delUser = (id) => {\n    dispatch(deleteUser(id));\n  };\n\n  const [errorState, setErrorState] = useState({});\n  const users = useSelector((state) => state.users.allUsers);\n\n  const Valid = () => {\n    const rules = {\n      name: 'required',\n      avatarImageUrl: 'required',\n    };\n    const validation = new Validator(stateUser, rules);\n    if (validation.fails()) {\n      setErrorState(validation.errors.errors);\n      return false;\n    }\n    setErrorState({});\n    return true;\n  };\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const setUserValidation = () => {\n    if (Valid()) {\n      dispatch(addUserToList(stateUser));\n      setStateUser({ name: '' });\n    }\n  };\n\n  const nameFunc = (text) => {\n    changeState({ name: text });\n  };\n\n  const imageFunc = (text) => {\n    changeState({ avatarImageUrl: text });\n  };\n\n  return (\n    <div>\n      <div>\n        <Input\n          placeholder=\"name\"\n          onChange={nameFunc}\n          err={errorState.name}\n          value={stateUser.name}\n        />\n      </div>\n\n      <div>\n        <Input\n          placeholder=\"avatar url\"\n          onChange={imageFunc}\n          err={errorState.avatarImageUrl}\n          value={stateUser.avatarImageUrl}\n        />\n      </div>\n\n      <Button value=\"submit\" onClick={setUserValidation} />\n      <div className=\"wrapUsers\">\n        {users.map((user) => {\n          return (\n            <div className=\"wrapCard\">\n              <h4>{user.name}</h4>\n              <Button onClick={() => delUser(user.value)} value=\"delete\" />\n            </div>\n          );\n        })}\n      </div>\n      <Button onClick={() => goBack()} value=\"back\" />\n    </div>\n  );\n};\n\nCreateUser.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default CreateUser;\n","import ACTIONS from '../../constans/ACTIONS';\n\nconst addUserToList = (newUser) => {\n  return {\n    type: ACTIONS.ADD_USER_TO_LIST,\n    allUsers: newUser,\n  };\n};\nconst deleteUser = (id) => {\n  return {\n    type: ACTIONS.DELETE_USER,\n    index: id,\n  };\n};\n\nexport { addUserToList, deleteUser };\n","import './App.css';\nimport React from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport Board from './components/pages/board';\nimport Create from './components/pages/create';\nimport EditIssue from './components/pages/editIssue';\nimport CreateColumn from './components/pages/createColumn';\nimport CreateUser from './components/pages/createUser';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Board} />\n\n          <Route exact path=\"/create_task\" component={Create} />\n\n          <Route exact path=\"/editIssue/:id\" component={EditIssue} />\n\n          <Route exact path=\"/create_column\" component={CreateColumn} />\n\n          <Route exact path=\"/create_user\" component={CreateUser} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import ACTIONS from '../../constans/ACTIONS';\n\nconst initialState = {\n  allIssues: [],\n  idArray: []\n};\nexport default function issueReducer(state = initialState, action) {\n  let id;\n  const newAllIssues = [...state.allIssues];\n\n  const index = action.deletedIssueId;\n  const newArr = [...state.allIssues];\n  newArr.splice(index, 1);\n\n  switch (action.type) {\n    case ACTIONS.ADD_ISSUE_TO_LIST:\n      return {\n        ...state,\n        allIssues: [\n          ...state.allIssues,\n          { ...action.issue, id: state.allIssues.length },\n        ],\n      };\n\n    case ACTIONS.EDIT_ISSUE:\n      id = action.editIssue.id;\n      newAllIssues[id] = { ...newAllIssues[id], ...action.editIssue };\n      return {\n        ...state,\n        allIssues: newAllIssues,\n      };\n\n    case ACTIONS.DELETE_ISSUE:\n      return {\n        ...state,\n        allIssues: newArr.map((elem, i) => {\n          if (i >= index) {\n            return {\n              ...elem,\n              id: elem.id - 1,\n            };\n          }\n          return elem;\n        }),\n      };\n\n    case ACTIONS.TOGGLE_USER_TASK:\n      const value = action.value\n      let newArray = [...state.idArray]\n\n      const hasValue = newArray.find(id => id === value)\n      \n      if (typeof hasValue != \"undefined\") {\n        newArray = newArray.filter(id => id !== value)\n      } else {\n        newArray.push(value)\n      }\n\n      return {\n\n        ...state,\n        idArray: newArray,\n      };\n\n\n    default:\n      return state;\n  }\n}\n\n\n\n\n\n\n// const filteredTask = allIssues.filter((issue) => {\n//   return issue.assignee.value.includes(newArr)\n// })","import ACTIONS from '../../constans/ACTIONS';\n\nconst initialState = {\n  allUsers: [\n    {\n      name: 'Stefan Stefanovic',\n      avatarImageUrl: 'https://avatars1.githubusercontent.com/u/60787166?s=400&u=522c714846394f4e9fdd67a013a8f6105cb2bfbe&v=4',\n      value: 0,\n    },\n    {\n      name: 'Pera Peric',\n      avatarImageUrl:\n        'https://pngimg.com/uploads/face/face_PNG5645.png',\n      value: 1,\n    },\n    {\n      name: 'Jovana Jovanovic',\n      avatarImageUrl:\n      'https://i.pinimg.com/736x/84/12/71/8412715b792dc8e26f384ce8d26e8304.jpg'\n        ,\n      value: 2,\n    },\n    {\n      name: 'Milos Milosevic',\n      avatarImageUrl:\n        'https://images-na.ssl-images-amazon.com/images/I/61lcOwGHJOL._AC_UX385_.jpg',\n      value: 3,\n    },\n  ],\n};\nexport default function issueReducer(state = initialState, action) {\n  const { index } = action;\n  const newArr = [...state.allUsers];\n  newArr.splice(index, 1);\n\n  switch (action.type) {\n    case ACTIONS.ADD_USER_TO_LIST:\n      return {\n        ...state,\n        allUsers: [\n          ...state.allUsers,\n          {\n            name: action.allUsers.name,\n            value: state.allUsers.length,\n            avatarImageUrl:action.allUsers.avatarImageUrl\n          },\n        ],\n      };\n    case ACTIONS.DELETE_USER:\n      return {\n        ...state,\n        allUsers: newArr.map((elem, i) => {\n          if (i >= index) {\n            return {\n              ...elem,\n              value: elem.value - 1,\n            };\n          }\n          return elem;\n        }),\n      };\n\n    default:\n      return state;\n  }\n}\n","import ACTIONS from '../../constans/ACTIONS';\n\nconst initialState = {\n  allListColumns: [\n    {\n      name: 'To Do',\n      createdAt: 'date',\n      itemCount: '',\n      value: 0,\n    },\n    {\n      name: 'In Progress',\n      createdAt: 'date',\n      itemCount: '',\n      value: 1,\n    },\n    {\n      name: 'On Hold',\n      createdAt: 'date',\n      itemCount: '',\n      value: 2,\n    },\n    {\n      name: 'Done',\n      createdAt: 'date',\n      itemCount: '',\n      value: 3,\n    },\n  ],\n};\nexport default function listColumnReducer(state = initialState, action) {\n  const { index } = action;\n  const newArr = [...state.allListColumns];\n  newArr.splice(index, 1);\n\n  switch (action.type) {\n    case ACTIONS.ADD_LISTCOLUMN:\n      return {\n        ...state,\n        allListColumns: [\n          ...state.allListColumns,\n          {\n            name: action.listColumn.name,\n            value: state.allListColumns.length,\n          },\n        ],\n      };\n\n    case ACTIONS.DELETE_COLUMN:\n      return {\n        ...state,\n        allListColumns: newArr.map((elem, i) => ({\n          ...elem,\n          value: i >= index ? elem.value - 1 : elem.value,\n        })),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport issueReducer from './Issues/issueReducer';\nimport userReducer from './Users/userReducer';\nimport listColumnReducer from './Columns/columnReducer';\n\nexport default combineReducers({\n  issues: issueReducer,\n  users: userReducer,\n  listColumn: listColumnReducer,\n});\n","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nconst store = createStore(reducers);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport { HashRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n","var map = {\n\t\"./ar\": 28,\n\t\"./ar.js\": 28,\n\t\"./az\": 29,\n\t\"./az.js\": 29,\n\t\"./be\": 30,\n\t\"./be.js\": 30,\n\t\"./bg\": 31,\n\t\"./bg.js\": 31,\n\t\"./bs\": 32,\n\t\"./bs.js\": 32,\n\t\"./ca\": 33,\n\t\"./ca.js\": 33,\n\t\"./cs\": 34,\n\t\"./cs.js\": 34,\n\t\"./cy\": 35,\n\t\"./cy.js\": 35,\n\t\"./da\": 36,\n\t\"./da.js\": 36,\n\t\"./de\": 37,\n\t\"./de.js\": 37,\n\t\"./el\": 38,\n\t\"./el.js\": 38,\n\t\"./en\": 22,\n\t\"./en.js\": 22,\n\t\"./es\": 39,\n\t\"./es.js\": 39,\n\t\"./et\": 40,\n\t\"./et.js\": 40,\n\t\"./eu\": 41,\n\t\"./eu.js\": 41,\n\t\"./fa\": 42,\n\t\"./fa.js\": 42,\n\t\"./fi\": 43,\n\t\"./fi.js\": 43,\n\t\"./fr\": 44,\n\t\"./fr.js\": 44,\n\t\"./hr\": 45,\n\t\"./hr.js\": 45,\n\t\"./hu\": 46,\n\t\"./hu.js\": 46,\n\t\"./id\": 47,\n\t\"./id.js\": 47,\n\t\"./it\": 48,\n\t\"./it.js\": 48,\n\t\"./ja\": 49,\n\t\"./ja.js\": 49,\n\t\"./ka\": 50,\n\t\"./ka.js\": 50,\n\t\"./ko\": 51,\n\t\"./ko.js\": 51,\n\t\"./lt\": 52,\n\t\"./lt.js\": 52,\n\t\"./lv\": 53,\n\t\"./lv.js\": 53,\n\t\"./mk\": 54,\n\t\"./mk.js\": 54,\n\t\"./mn\": 55,\n\t\"./mn.js\": 55,\n\t\"./ms\": 56,\n\t\"./ms.js\": 56,\n\t\"./nb_NO\": 57,\n\t\"./nb_NO.js\": 57,\n\t\"./nl\": 58,\n\t\"./nl.js\": 58,\n\t\"./pl\": 59,\n\t\"./pl.js\": 59,\n\t\"./pt\": 60,\n\t\"./pt.js\": 60,\n\t\"./pt_BR\": 61,\n\t\"./pt_BR.js\": 61,\n\t\"./ro\": 62,\n\t\"./ro.js\": 62,\n\t\"./ru\": 63,\n\t\"./ru.js\": 63,\n\t\"./se\": 64,\n\t\"./se.js\": 64,\n\t\"./sl\": 65,\n\t\"./sl.js\": 65,\n\t\"./sq\": 66,\n\t\"./sq.js\": 66,\n\t\"./sr\": 67,\n\t\"./sr.js\": 67,\n\t\"./sv\": 68,\n\t\"./sv.js\": 68,\n\t\"./tr\": 69,\n\t\"./tr.js\": 69,\n\t\"./ua\": 70,\n\t\"./ua.js\": 70,\n\t\"./uk\": 71,\n\t\"./uk.js\": 71,\n\t\"./vi\": 72,\n\t\"./vi.js\": 72,\n\t\"./zh\": 73,\n\t\"./zh.js\": 73,\n\t\"./zh_TW\": 74,\n\t\"./zh_TW.js\": 74\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 95;"],"sourceRoot":""}